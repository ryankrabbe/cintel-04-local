[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny.express import input, ui\nfrom shinywidgets import render_plotly\nimport palmerpenguins\nimport pandas as pd \nimport seaborn as sns\nfrom shiny import reactive, render, req\n\npenguins_df = palmerpenguins.load_penguins()\n\nui.page_opts(title=\"Penguin Data Ryan Krabbe\", fillable=True)\n\n    # Add a Shiny UI sidebar for user interaction\nwith ui.sidebar(open=\"open\"):\n    ui.input_slider(\"selected_number_of_bins\", \"Number of Bins\", 1, 100, 30) \n    ui.h2(\"Sidebar\")\n\n    # Use ui.input_selectize() to create a dropdown input to choose a column\n    ui.input_selectize(\"selected_attribute\",\n                        \"Select Attribute\",\n                        [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n                       )\n    \n    # Use ui.input_numeric() to create a numeric input for the number of Plotly histogram bins\n    ui.input_numeric(\"plotly_bin_count\", \"Number of Plotly Histogram Bins\", 30)\n\n    # Use ui.input_slider() to create a slider input for the number of Seaborn bins\n    ui.input_slider(\"seaborn_bin_count\", \"Seaborn bin count\", 1, 25, 15)\n\n    # Use ui.input_checkbox_group() to create a checkbox group input to filter the species\n    ui.input_checkbox_group(\"selected_species_list\", \n                             \"Select Species\", \n                             [\"Adelie\", \"Gentoo\", \"Chinstrap\"], \n                             selected=[\"Adelie\", \"Gentoo\", \"Chinstrap\"], \n                             inline=True)\n    \n    ui.input_checkbox_group(\"selected_island_list\", \n                             \"Select Island\", \n                             [\"Dream\", \"Biscoe\", \"Torgersen\"], \n                             selected=[\"Dream\", \"Biscoe\", \"Torgersen\"], \n                             inline=True)\n\n    # Add a hyperlink to the sidebar\n    ui.a(\"GitHub\", href=\"https://github.com/ryankrabbe/cintel-02-data\", target=\"_blank\")\n\n    # Use ui.hr() to add a horizontal rule to the sidebar\n    ui.hr()\n\n    # Add a DataTable and DataGrid\nwith ui.accordion(id=\"acc\", open=\"Data Table\"):  \n    with ui.accordion_panel(\"Data Table\"):\n        @render.data_frame\n        def penguin_datatable():\n            return filtered_data() \n            \n    with ui.accordion_panel(\"Data Grid\"):\n        @render.data_frame\n        def penguin_datagrid():\n            return filtered_data()\n\n    # Add a Plotly Histogram, Seaborn Histogram, and Plotly Scatterplot\n    #Plotly Histogram\nwith ui.layout_columns():\n    with ui.card(full_screen=False):\n        ui.h2(\"Plotly Histogram\")\n\n        @render_plotly\n        def plotly_histogram():\n            data = filtered_data() \n            return px.histogram(\n                data,\n                x=input.selected_attribute(),\n                nbins=input.plotly_bin_count(),\n                color=\"species\"\n            )\n\n    #Seaborn Histogram\n    with ui.card(full_screen=True):\n        ui.h2(\"Seaborn Histogram\")\n\n        @render.plot(alt=\"Seaborn Histogram\")\n        def seaborn_histogram():\n            data = filtered_data()\n            seaborn_hist = sns.histplot(\n                data=data,\n                x=input.selected_attribute(),\n                bins=input.seaborn_bin_count(),\n            )\n            seaborn_hist.set_title(\"Seaborn Histogram\")\n            seaborn_hist.set_ylabel(\"Count\")\n\n    #Plotly Scatterplot\n    with ui.card(full_screen=True):\n        ui.h2(\"Plotly Scatterplot\")\n\n        @render_plotly\n        def plotly_scatterplot():\n            data = filtered_data()  \n            return px.scatter(\n                data,\n                title=\"Plotly Scatterplot\",\n                x=\"bill_length_mm\",\n                y=\"bill_depth_mm\",\n                color=\"species\",\n                size_max=8,\n            )\n\n@reactive.calc\ndef filtered_data():\n    return penguins_df[\n        (penguins_df[\"species\"].isin(input.selected_species_list())) &\n        (penguins_df[\"island\"].isin(input.selected_island_list()))]\n", "type": "text"}]